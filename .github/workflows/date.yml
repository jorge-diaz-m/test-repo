name: Update Project Field on PR Open

on:
  pull_request:
    types: [opened]

jobs:
  update-project:
    runs-on: ubuntu-latest

    steps:
      - name: Get current date in ISO 8601
        id: get_date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Update 'Date' field in GitHub Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DATE }}  # Classic PAT with `project:write`
          script: |
            const date = "${{ steps.get_date.outputs.date }}";

            const projectNumber = 1;  // Set your project number here
            const owner = context.repo.owner;

            // Step 1: Get project ID from user's projects
            const projects = await github.graphql(`
              query($owner: String!) {
                user(login: $owner) {
                  projectsV2(first: 10) {
                    nodes {
                      id
                      title
                      number
                    }
                  }
                }
              }
            `, { owner });

            const project = projects.user.projectsV2.nodes.find(p => p.number === projectNumber);
            if (!project) {
              throw new Error(" Project not found for user: " + owner);
            }

            // Step 2: Find the item in the project that matches this PR
            const items = await github.graphql(`
              query($projectId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    items(first: 100) {
                      nodes {
                        id
                        content {
                          ... on PullRequest {
                            number
                          }
                        }
                      }
                    }
                  }
                }
              }
            `, { projectId: project.id });

            const prItem = items.node.items.nodes.find(i => i.content?.number === context.issue.number);
            if (!prItem) {
              throw new Error(" PR is not added to the project yet.");
            }

            // Step 3: Get field ID for "Date"
            const fields = await github.graphql(`
              query($projectId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    fields(first: 20) {
                      nodes {
                        ... on ProjectV2FieldCommon {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            `, { projectId: project.id });

            const field = fields.node.fields.nodes.find(f => f.name === "Date");
            if (!field) {
              throw new Error("Field 'Date' not found.");
            }

            // Step 4: Update the field value (for date-type fields!)
            await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Date!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { date: $value }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `, {
              projectId: project.id,
              itemId: prItem.id,
              fieldId: field.id,
              value: date
            });

            console.log(`Set 'Date' field to ${date}`);

